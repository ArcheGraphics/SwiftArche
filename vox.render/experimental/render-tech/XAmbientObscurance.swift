//  Copyright (c) 2023 Feng Yang
//
//  I am making my contributions/submissions to this project solely in my
//  personal capacity and am not conveying any rights to any intellectual
//  property of any third parties.

import Math

// Encapsulates the pipeline states and intermediate objects required for
//  Scalable Ambient Obscurance.
class XAmbientObscurance {
    // The SAO texture generated by the update.
    var texture: MTLTexture!

    // Initializes this object, allocating metal objects from the device based on
    //  functions in the library.
    init(with device: MTLDevice, library: MTLLibrary) {
    }

    // Writes commands to update the SAO texture using the command buffer, with
    // AAPLFrameConstants from the frameDataBuffer with the latest depth data.
    func update(_ commandBuffer: MTLCommandBuffer,
                frameDataBuffer: MTLBuffer,
                cameraParamsBuffer: MTLBuffer,
                depth: MTLTexture,
                depthPyramid: MTLTexture) {
    }

    // Resizes the internal data structures to the required output size.
    func resize(_ size: CGSize) {
    }
}
